# -*- coding: utf-8 -*-
"""Mini Project_Pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UZ-VuqyXt5Fdqr3o_PZKKm1j8LDt8-Ip

install pandas and numpy library
"""

!pip install pandas
!pip install numpy

"""import of install library"""

import pandas as pd

"""create a dataframe"""

dict1 = {
    'Name': ['Rahul','Ajit','Arpita','Jeet','Yash','Vimal','Rosy'],
    'Marks': [98,89,99,87,90,83,99],
    'Gender':['Male','Male','Female','Male','Male','Female','Female']
}

df1 = pd.DataFrame(dict1)
df1

"""Display Top 3 rows of Dataset"""

df1.head(3)

"""Check last 3 rows of dataset"""

df1.tail(3)

"""find shape of our dataset(Number of rows and Number of Column)"""

df1.shape

print('Number of Rows',df1.shape[0])
print('Number of Columns',df1.shape[1])

"""Get Information of the dataset like total number rows,total number of column, datatypes of each column and memory requirement"""

df1.info()

"""check null values in the dataset"""

df1.isnull()

"""Get overall Statistic about the dataframe"""

df1.describe()

df1.describe(include= 'all')

"""Find Unique values from the Gender column"""

df1['Gender'].unique()

"""Find the number of unique values from the gender column"""

df1['Gender'].nunique()

"""Display count of unique values in gender column"""

df1['Gender'].value_counts()

"""Find total number of Students having marks between 90 to 100 (inclusive) using between method"""

df1[df1['Marks'] >= 90]

df1[(df1['Marks']>= 90)  &  (df1['Marks']<= 100)]

len(df1[(df1['Marks']>= 90)  &  (df1['Marks']<= 100)])

sum((df1['Marks']>= 90)  &  (df1['Marks']<= 100))

sum(df1['Marks'].between(90,100))

"""Find the average marks"""

df1['Marks'].mean()

"""Find the Minimum marks"""

df1['Marks'].min()

"""Find the Maximum marks"""

df1['Marks'].max()

"""Apply method: self created method"""

def marks(x):
  return x/2

df1['Marks'].apply(marks)

"""add new column in  dataframe"""

df1['Half_Marks'] = df1['Marks'].apply(marks)
df1

"""Apply lambda function to optimize the above method applied"""

df1['Marks'].apply(lambda x:x//2 )

"""Find the length of each name"""

df1['Name'].apply(len)

"""Amp Function"""

df1['Male_female']= df1['Gender'].map({'Male':1,'Female':0})
df1

"""Drop the column"""

df1.drop('Male_female',axis = 1)

df1

"""Drop mutliple column"""

df1.drop(columns = ['Male_female','Half_Marks'],inplace = True)

df1

"""Print Name of the Columns"""

df1.columns

df1.index

"""Sort the dataframe as per the marks column"""

df1.sort_values(by= 'Marks', ascending = False)

df1.sort_values(by= ['Marks','Gender'], ascending = False)

"""Display name and marks of the female students"""

df1[df1['Gender'] == 'Female'][['Name','Marks']]

df1[df1['Gender'].isin(['Female'])][['Name','Marks']]

